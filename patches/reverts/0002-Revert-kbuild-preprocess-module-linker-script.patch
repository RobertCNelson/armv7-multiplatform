From cb9939fde44bbb130ed328f1713dca6fa8f83e0e Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Fri, 12 Feb 2021 11:41:55 -0600
Subject: [PATCH 2/2] Revert "kbuild: preprocess module linker script"

This reverts commit 596b0474d3d9b1242eab713f84d8873f9887d980.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 Makefile                                               | 10 ++++------
 arch/arm/Makefile                                      |  4 ++++
 .../{include/asm/module.lds.h => kernel/module.lds}    |  2 --
 arch/arm64/Makefile                                    |  4 ++++
 .../{include/asm/module.lds.h => kernel/module.lds}    |  2 --
 arch/ia64/Makefile                                     |  1 +
 arch/ia64/{include/asm/module.lds.h => module.lds}     |  0
 arch/m68k/Makefile                                     |  1 +
 .../{include/asm/module.lds.h => kernel/module.lds}    |  0
 arch/powerpc/Makefile                                  |  1 +
 .../{include/asm/module.lds.h => kernel/module.lds}    |  0
 arch/riscv/Makefile                                    |  3 +++
 .../{include/asm/module.lds.h => kernel/module.lds}    |  3 +--
 arch/um/include/asm/Kbuild                             |  1 -
 include/asm-generic/Kbuild                             |  1 -
 include/asm-generic/module.lds.h                       | 10 ----------
 scripts/.gitignore                                     |  1 -
 scripts/Makefile                                       |  3 ---
 scripts/Makefile.modfinal                              |  5 +++--
 scripts/{module.lds.S => module-common.lds}            |  3 ---
 scripts/package/builddeb                               |  2 +-
 21 files changed, 23 insertions(+), 34 deletions(-)
 rename arch/arm/{include/asm/module.lds.h => kernel/module.lds} (72%)
 rename arch/arm64/{include/asm/module.lds.h => kernel/module.lds} (76%)
 rename arch/ia64/{include/asm/module.lds.h => module.lds} (100%)
 rename arch/m68k/{include/asm/module.lds.h => kernel/module.lds} (100%)
 rename arch/powerpc/{include/asm/module.lds.h => kernel/module.lds} (100%)
 rename arch/riscv/{include/asm/module.lds.h => kernel/module.lds} (84%)
 delete mode 100644 include/asm-generic/module.lds.h
 rename scripts/{module.lds.S => module-common.lds} (93%)

diff --git a/Makefile b/Makefile
index 74025f9d831d..eb167ab981d4 100644
--- a/Makefile
+++ b/Makefile
@@ -503,6 +503,7 @@ KBUILD_CFLAGS_KERNEL :=
 KBUILD_AFLAGS_MODULE  := -DMODULE
 KBUILD_CFLAGS_MODULE  := -DMODULE
 KBUILD_LDFLAGS_MODULE :=
+export KBUILD_LDS_MODULE := $(srctree)/scripts/module-common.lds
 KBUILD_LDFLAGS :=
 CLANG_FLAGS :=
 
@@ -1392,7 +1393,7 @@ endif
 # using awk while concatenating to the final file.
 
 PHONY += modules
-modules: $(if $(KBUILD_BUILTIN),vmlinux) modules_check modules_prepare
+modules: $(if $(KBUILD_BUILTIN),vmlinux) modules_check
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost
 
 PHONY += modules_check
@@ -1409,7 +1410,6 @@ targets += modules.order
 # Target to prepare building external modules
 PHONY += modules_prepare
 modules_prepare: prepare
-	$(Q)$(MAKE) $(build)=scripts scripts/module.lds
 
 # Target to install modules
 PHONY += modules_install
@@ -1740,9 +1740,7 @@ help:
 	@echo  '  clean           - remove generated files in module directory only'
 	@echo  ''
 
-# no-op for external module builds
-PHONY += prepare modules_prepare
-
+PHONY += prepare
 endif # KBUILD_EXTMOD
 
 # Single targets
@@ -1775,7 +1773,7 @@ MODORDER := .modules.tmp
 endif
 
 PHONY += single_modpost
-single_modpost: $(single-no-ko) modules_prepare
+single_modpost: $(single-no-ko)
 	$(Q){ $(foreach m, $(single-ko), echo $(extmod-prefix)$m;) } > $(MODORDER)
 	$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost
 
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index e15f76ca2887..f4b6a30ce440 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -16,6 +16,10 @@ LDFLAGS_vmlinux	+= --be8
 KBUILD_LDFLAGS_MODULE	+= --be8
 endif
 
+ifeq ($(CONFIG_ARM_MODULE_PLTS),y)
+KBUILD_LDS_MODULE	+= $(srctree)/arch/arm/kernel/module.lds
+endif
+
 GZFLAGS		:=-9
 #KBUILD_CFLAGS	+=-pipe
 
diff --git a/arch/arm/include/asm/module.lds.h b/arch/arm/kernel/module.lds
similarity index 72%
rename from arch/arm/include/asm/module.lds.h
rename to arch/arm/kernel/module.lds
index 0e7cb4e314b4..79cb6af565e5 100644
--- a/arch/arm/include/asm/module.lds.h
+++ b/arch/arm/kernel/module.lds
@@ -1,7 +1,5 @@
 /* SPDX-License-Identifier: GPL-2.0 */
-#ifdef CONFIG_ARM_MODULE_PLTS
 SECTIONS {
 	.plt : { BYTE(0) }
 	.init.plt : { BYTE(0) }
 }
-#endif
diff --git a/arch/arm64/Makefile b/arch/arm64/Makefile
index 485b7dbd4f9e..263b8d19c274 100644
--- a/arch/arm64/Makefile
+++ b/arch/arm64/Makefile
@@ -126,6 +126,10 @@ endif
 
 CHECKFLAGS	+= -D__aarch64__
 
+ifeq ($(CONFIG_ARM64_MODULE_PLTS),y)
+KBUILD_LDS_MODULE	+= $(srctree)/arch/arm64/kernel/module.lds
+endif
+
 ifeq ($(CONFIG_DYNAMIC_FTRACE_WITH_REGS),y)
   KBUILD_CPPFLAGS += -DCC_USING_PATCHABLE_FUNCTION_ENTRY
   CC_FLAGS_FTRACE := -fpatchable-function-entry=2
diff --git a/arch/arm64/include/asm/module.lds.h b/arch/arm64/kernel/module.lds
similarity index 76%
rename from arch/arm64/include/asm/module.lds.h
rename to arch/arm64/kernel/module.lds
index 691f15af788e..22e36a21c113 100644
--- a/arch/arm64/include/asm/module.lds.h
+++ b/arch/arm64/kernel/module.lds
@@ -1,7 +1,5 @@
-#ifdef CONFIG_ARM64_MODULE_PLTS
 SECTIONS {
 	.plt (NOLOAD) : { BYTE(0) }
 	.init.plt (NOLOAD) : { BYTE(0) }
 	.text.ftrace_trampoline (NOLOAD) : { BYTE(0) }
 }
-#endif
diff --git a/arch/ia64/Makefile b/arch/ia64/Makefile
index 703b1c4f6d12..2876a7df1b0a 100644
--- a/arch/ia64/Makefile
+++ b/arch/ia64/Makefile
@@ -20,6 +20,7 @@ CHECKFLAGS	+= -D__ia64=1 -D__ia64__=1 -D_LP64 -D__LP64__
 
 OBJCOPYFLAGS	:= --strip-all
 LDFLAGS_vmlinux	:= -static
+KBUILD_LDS_MODULE += $(srctree)/arch/ia64/module.lds
 KBUILD_AFLAGS_KERNEL := -mconstant-gp
 EXTRA		:=
 
diff --git a/arch/ia64/include/asm/module.lds.h b/arch/ia64/module.lds
similarity index 100%
rename from arch/ia64/include/asm/module.lds.h
rename to arch/ia64/module.lds
diff --git a/arch/m68k/Makefile b/arch/m68k/Makefile
index ea14f2046fb4..4438ffb4bbe1 100644
--- a/arch/m68k/Makefile
+++ b/arch/m68k/Makefile
@@ -75,6 +75,7 @@ KBUILD_CPPFLAGS += -D__uClinux__
 endif
 
 KBUILD_LDFLAGS := -m m68kelf
+KBUILD_LDS_MODULE += $(srctree)/arch/m68k/kernel/module.lds
 
 ifdef CONFIG_SUN3
 LDFLAGS_vmlinux = -N
diff --git a/arch/m68k/include/asm/module.lds.h b/arch/m68k/kernel/module.lds
similarity index 100%
rename from arch/m68k/include/asm/module.lds.h
rename to arch/m68k/kernel/module.lds
diff --git a/arch/powerpc/Makefile b/arch/powerpc/Makefile
index 5c8c06215dd4..c38493bcbcf5 100644
--- a/arch/powerpc/Makefile
+++ b/arch/powerpc/Makefile
@@ -65,6 +65,7 @@ UTS_MACHINE := $(subst $(space),,$(machine-y))
 ifdef CONFIG_PPC32
 KBUILD_LDFLAGS_MODULE += arch/powerpc/lib/crtsavres.o
 else
+KBUILD_LDS_MODULE += $(srctree)/arch/powerpc/kernel/module.lds
 ifeq ($(call ld-ifversion, -ge, 225000000, y),y)
 # Have the linker provide sfpr if possible.
 # There is a corresponding test in arch/powerpc/lib/Makefile
diff --git a/arch/powerpc/include/asm/module.lds.h b/arch/powerpc/kernel/module.lds
similarity index 100%
rename from arch/powerpc/include/asm/module.lds.h
rename to arch/powerpc/kernel/module.lds
diff --git a/arch/riscv/Makefile b/arch/riscv/Makefile
index 0289a97325d1..10df59f28add 100644
--- a/arch/riscv/Makefile
+++ b/arch/riscv/Makefile
@@ -53,6 +53,9 @@ endif
 ifeq ($(CONFIG_CMODEL_MEDANY),y)
 	KBUILD_CFLAGS += -mcmodel=medany
 endif
+ifeq ($(CONFIG_MODULE_SECTIONS),y)
+	KBUILD_LDS_MODULE += $(srctree)/arch/riscv/kernel/module.lds
+endif
 ifeq ($(CONFIG_PERF_EVENTS),y)
         KBUILD_CFLAGS += -fno-omit-frame-pointer
 endif
diff --git a/arch/riscv/include/asm/module.lds.h b/arch/riscv/kernel/module.lds
similarity index 84%
rename from arch/riscv/include/asm/module.lds.h
rename to arch/riscv/kernel/module.lds
index 4254ff2ff049..295ecfb341a2 100644
--- a/arch/riscv/include/asm/module.lds.h
+++ b/arch/riscv/kernel/module.lds
@@ -1,9 +1,8 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 /* Copyright (C) 2017 Andes Technology Corporation */
-#ifdef CONFIG_MODULE_SECTIONS
+
 SECTIONS {
 	.plt (NOLOAD) : { BYTE(0) }
 	.got (NOLOAD) : { BYTE(0) }
 	.got.plt (NOLOAD) : { BYTE(0) }
 }
-#endif
diff --git a/arch/um/include/asm/Kbuild b/arch/um/include/asm/Kbuild
index 1c63b260ecc4..8d435f8a6dec 100644
--- a/arch/um/include/asm/Kbuild
+++ b/arch/um/include/asm/Kbuild
@@ -16,7 +16,6 @@ generic-y += kdebug.h
 generic-y += mcs_spinlock.h
 generic-y += mm-arch-hooks.h
 generic-y += mmiowb.h
-generic-y += module.lds.h
 generic-y += param.h
 generic-y += pci.h
 generic-y += percpu.h
diff --git a/include/asm-generic/Kbuild b/include/asm-generic/Kbuild
index d1300c6e0a47..0c452a115365 100644
--- a/include/asm-generic/Kbuild
+++ b/include/asm-generic/Kbuild
@@ -40,7 +40,6 @@ mandatory-y += mmiowb.h
 mandatory-y += mmu.h
 mandatory-y += mmu_context.h
 mandatory-y += module.h
-mandatory-y += module.lds.h
 mandatory-y += msi.h
 mandatory-y += pci.h
 mandatory-y += percpu.h
diff --git a/include/asm-generic/module.lds.h b/include/asm-generic/module.lds.h
deleted file mode 100644
index f210d5c1b78b..000000000000
--- a/include/asm-generic/module.lds.h
+++ /dev/null
@@ -1,10 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0-only */
-#ifndef __ASM_GENERIC_MODULE_LDS_H
-#define __ASM_GENERIC_MODULE_LDS_H
-
-/*
- * <asm/module.lds.h> can specify arch-specific sections for linking modules.
- * Empty for the asm-generic header.
- */
-
-#endif /* __ASM_GENERIC_MODULE_LDS_H */
diff --git a/scripts/.gitignore b/scripts/.gitignore
index a6c11316c969..0d1c8e217cd7 100644
--- a/scripts/.gitignore
+++ b/scripts/.gitignore
@@ -8,4 +8,3 @@ asn1_compiler
 extract-cert
 sign-file
 insert-sys-cert
-/module.lds
diff --git a/scripts/Makefile b/scripts/Makefile
index b5418ec587fb..bc018e4b733e 100644
--- a/scripts/Makefile
+++ b/scripts/Makefile
@@ -29,9 +29,6 @@ endif
 # The following programs are only built on demand
 hostprogs += unifdef
 
-# The module linker script is preprocessed on demand
-targets += module.lds
-
 subdir-$(CONFIG_GCC_PLUGINS) += gcc-plugins
 subdir-$(CONFIG_MODVERSIONS) += genksyms
 subdir-$(CONFIG_SECURITY_SELINUX) += selinux
diff --git a/scripts/Makefile.modfinal b/scripts/Makefile.modfinal
index ae01baf96f4e..411c1e600e7d 100644
--- a/scripts/Makefile.modfinal
+++ b/scripts/Makefile.modfinal
@@ -33,10 +33,11 @@ quiet_cmd_ld_ko_o = LD [M]  $@
       cmd_ld_ko_o =                                                     \
 	$(LD) -r $(KBUILD_LDFLAGS)					\
 		$(KBUILD_LDFLAGS_MODULE) $(LDFLAGS_MODULE)		\
-		-T scripts/module.lds -o $@ $(filter %.o, $^);		\
+		$(addprefix -T , $(KBUILD_LDS_MODULE))			\
+		-o $@ $(filter %.o, $^);				\
 	$(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) $@, true)
 
-$(modules): %.ko: %.o %.mod.o scripts/module.lds FORCE
+$(modules): %.ko: %.o %.mod.o $(KBUILD_LDS_MODULE) FORCE
 	+$(call if_changed,ld_ko_o)
 
 targets += $(modules) $(modules:.ko=.mod.o)
diff --git a/scripts/module.lds.S b/scripts/module-common.lds
similarity index 93%
rename from scripts/module.lds.S
rename to scripts/module-common.lds
index 69b9b71a6a47..d61b9e8678e8 100644
--- a/scripts/module.lds.S
+++ b/scripts/module-common.lds
@@ -24,6 +24,3 @@ SECTIONS {
 
 	__jump_table		0 : ALIGN(8) { KEEP(*(__jump_table)) }
 }
-
-/* bring in arch-specific sections */
-#include <asm/module.lds.h>
diff --git a/scripts/package/builddeb b/scripts/package/builddeb
index 91a502bb97e8..8ff212b9a8ed 100755
--- a/scripts/package/builddeb
+++ b/scripts/package/builddeb
@@ -62,7 +62,7 @@ deploy_kernel_headers () {
 		cd $srctree
 		find . arch/$SRCARCH -maxdepth 1 -name Makefile\*
 		find include scripts -type f -o -type l
-		find arch/$SRCARCH -name Kbuild.platforms -o -name Platform
+		find arch/$SRCARCH -name module.lds -o -name Kbuild.platforms -o -name Platform
 		find $(find arch/$SRCARCH -name include -o -name scripts -type d) -type f
 	) > debian/hdrsrcfiles
 
-- 
2.30.0

