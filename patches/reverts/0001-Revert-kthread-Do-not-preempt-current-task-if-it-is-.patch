From c564f4e8eb4eccd1365ae5f938d0b2b0fcfd7222 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Tue, 7 Sep 2021 17:28:46 -0500
Subject: [PATCH] Revert "kthread: Do not preempt current task if it is going
 to call schedule()"

This reverts commit 26c7295be0c5e6da3fa45970e9748be983175b1b.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 kernel/kthread.c | 17 ++---------------
 1 file changed, 2 insertions(+), 15 deletions(-)

diff --git a/kernel/kthread.c b/kernel/kthread.c
index bfbfa481be3a..b262f47046ca 100644
--- a/kernel/kthread.c
+++ b/kernel/kthread.c
@@ -199,15 +199,8 @@ static void __kthread_parkme(struct kthread *self)
 		if (!test_bit(KTHREAD_SHOULD_PARK, &self->flags))
 			break;
 
-		/*
-		 * Thread is going to call schedule(), do not preempt it,
-		 * or the caller of kthread_park() may spend more time in
-		 * wait_task_inactive().
-		 */
-		preempt_disable();
 		complete(&self->parked);
-		schedule_preempt_disabled();
-		preempt_enable();
+		schedule();
 	}
 	__set_current_state(TASK_RUNNING);
 }
@@ -252,14 +245,8 @@ static int kthread(void *_create)
 	/* OK, tell user we're spawned, wait for stop or wakeup */
 	__set_current_state(TASK_UNINTERRUPTIBLE);
 	create->result = current;
-	/*
-	 * Thread is going to call schedule(), do not preempt it,
-	 * or the creator may spend more time in wait_task_inactive().
-	 */
-	preempt_disable();
 	complete(done);
-	schedule_preempt_disabled();
-	preempt_enable();
+	schedule();
 
 	ret = -EINTR;
 	if (!test_bit(KTHREAD_SHOULD_STOP, &self->flags)) {
-- 
2.30.2

