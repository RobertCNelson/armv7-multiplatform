From 77a72e706d0243395f69601dd7435a680da34c1f Mon Sep 17 00:00:00 2001
From: Carter Chen <carter.chen@infineon.com>
Date: Thu, 25 Aug 2022 02:33:13 -0500
Subject: [PATCH 137/137] brcmfmac: update firmware loading name for CY5557x

Updating the firmware/nvram/clm_blob name to loading for CY5557x series.
Changing all naming of 55560 to 55572.

CY55571, CY55573 use the same PID as 55572.


Signed-off-by: Carter Chen <carter.chen@infineon.com>
---
 .../broadcom/brcm80211/brcmfmac/bcmsdh.c      |  8 +++----
 .../broadcom/brcm80211/brcmfmac/chip.c        | 22 ++++++++---------
 .../broadcom/brcm80211/brcmfmac/pcie.c        | 14 +++++------
 .../broadcom/brcm80211/brcmfmac/sdio.c        | 24 +++++++++----------
 .../broadcom/brcm80211/include/brcm_hw_ids.h  |  4 ++--
 include/linux/mmc/sdio_ids.h                  |  2 +-
 6 files changed, 37 insertions(+), 37 deletions(-)

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bcmsdh.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bcmsdh.c
index b42400a0883d..36abcd3d9e70 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bcmsdh.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/bcmsdh.c
@@ -48,7 +48,7 @@
 #define SDIO_435X_FUNC2_BLOCKSIZE	256
 #define SDIO_4329_FUNC2_BLOCKSIZE	128
 #define SDIO_89459_FUNC2_BLOCKSIZE	256
-#define SDIO_CYW55560_FUNC2_BLOCKSIZE	256
+#define SDIO_CYW55572_FUNC2_BLOCKSIZE	256
 
 /* Maximum milliseconds to wait for F2 to come up */
 #define SDIO_WAIT_F2RDY	3000
@@ -934,8 +934,8 @@ int brcmf_sdiod_probe(struct brcmf_sdio_dev *sdiodev)
 	case SDIO_DEVICE_ID_CYPRESS_54594:
 		f2_blksz = SDIO_89459_FUNC2_BLOCKSIZE;
 		break;
-	case SDIO_DEVICE_ID_CYPRESS_55560:
-		f2_blksz = SDIO_CYW55560_FUNC2_BLOCKSIZE;
+	case SDIO_DEVICE_ID_CYPRESS_55572:
+		f2_blksz = SDIO_CYW55572_FUNC2_BLOCKSIZE;
 		break;
 	default:
 		break;
@@ -1012,7 +1012,7 @@ static const struct sdio_device_id brcmf_sdmmc_ids[] = {
 	CYF_SDIO_DEVICE(SDIO_DEVICE_ID_CYPRESS_54590),
 	CYF_SDIO_DEVICE(SDIO_DEVICE_ID_CYPRESS_54591),
 	CYF_SDIO_DEVICE(SDIO_DEVICE_ID_CYPRESS_54594),
-	CYF_SDIO_DEVICE(SDIO_DEVICE_ID_CYPRESS_55560),
+	CYF_SDIO_DEVICE(SDIO_DEVICE_ID_CYPRESS_55572),
 	{ /* end: all zeroes */ }
 };
 MODULE_DEVICE_TABLE(sdio, brcmf_sdmmc_ids);
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
index a6e013b8d33e..2807530016ce 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
@@ -231,11 +231,11 @@ struct sbsocramregs {
 /* Minimum PMU resource mask for 4373 */
 #define CY_4373_PMU_MIN_RES_MASK       0xFCAFF7F
 
-/* CYW55560 dedicated space and RAM base */
-#define CYW55560_TCAM_SIZE	0x800
-#define CYW55560_TRXHDR_SIZE	0x2b4
-#define CYW55560_RAM_BASE	(0x370000 + \
-				 CYW55560_TCAM_SIZE + CYW55560_TRXHDR_SIZE)
+/* CYW55572 dedicated space and RAM base */
+#define CYW55572_TCAM_SIZE	0x800
+#define CYW55572_TRXHDR_SIZE	0x2b4
+#define CYW55572_RAM_BASE	(0x370000 + \
+				 CYW55572_TCAM_SIZE + CYW55572_TRXHDR_SIZE)
 
 #define BRCMF_BLHS_POLL_INTERVAL			10	/* msec */
 #define BRCMF_BLHS_D2H_READY_TIMEOUT			100	/* msec */
@@ -773,8 +773,8 @@ static u32 brcmf_chip_tcm_rambase(struct brcmf_chip_priv *ci)
 		return 0x160000;
 	case CY_CC_89459_CHIP_ID:
 		return ((ci->pub.chiprev < 9) ? 0x180000 : 0x160000);
-	case CY_CC_55560_CHIP_ID:
-		return CYW55560_RAM_BASE;
+	case CY_CC_55572_CHIP_ID:
+		return CYW55572_RAM_BASE;
 	default:
 		brcmf_err("unknown chip: %s\n", ci->pub.name);
 		break;
@@ -793,9 +793,9 @@ int brcmf_chip_get_raminfo(struct brcmf_chip *pub)
 	if (mem) {
 		mem_core = container_of(mem, struct brcmf_core_priv, pub);
 		ci->pub.ramsize = brcmf_chip_tcm_ramsize(mem_core);
-		if (ci->pub.chip == CY_CC_55560_CHIP_ID)
-			ci->pub.ramsize -= (CYW55560_TCAM_SIZE +
-					    CYW55560_TRXHDR_SIZE);
+		if (ci->pub.chip == CY_CC_55572_CHIP_ID)
+			ci->pub.ramsize -= (CYW55572_TCAM_SIZE +
+					    CYW55572_TRXHDR_SIZE);
 		ci->pub.rambase = brcmf_chip_tcm_rambase(ci);
 		if (!ci->pub.rambase) {
 			brcmf_err("RAM base not provided with ARM CR4 core\n");
@@ -1628,7 +1628,7 @@ bool brcmf_chip_sr_capable(struct brcmf_chip *pub)
 		reg = chip->ops->read32(chip->ctx, addr);
 		return reg != 0;
 	case CY_CC_4373_CHIP_ID:
-	case CY_CC_55560_CHIP_ID:
+	case CY_CC_55572_CHIP_ID:
 	case CY_CC_89459_CHIP_ID:
 		/* explicitly check SR engine enable bit */
 		addr = CORE_CC_REG(base, sr_control0);
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c
index bad1c971dcf9..30e3f6d6e66d 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c
@@ -63,7 +63,7 @@ BRCMF_FW_DEF(4366B, "brcmfmac4366b-pcie");
 BRCMF_FW_DEF(4366C, "brcmfmac4366c-pcie");
 BRCMF_FW_DEF(4371, "brcmfmac4371-pcie");
 CY_FW_DEF(4355, "cyfmac54591-pcie");
-CY_FW_TRXSE_DEF(55560, "cyfmac55560-pcie");
+CY_FW_TRXSE_DEF(55572, "cyfmac55572-pcie");
 CY_FW_DEF(4373, "cyfmac4373-pcie");
 
 static const struct brcmf_firmware_mapping brcmf_pcie_fwnames[] = {
@@ -86,7 +86,7 @@ static const struct brcmf_firmware_mapping brcmf_pcie_fwnames[] = {
 	BRCMF_FW_ENTRY(BRCM_CC_43664_CHIP_ID, 0xFFFFFFF0, 4366C),
 	BRCMF_FW_ENTRY(BRCM_CC_4371_CHIP_ID, 0xFFFFFFFF, 4371),
 	BRCMF_FW_ENTRY(CY_CC_89459_CHIP_ID, 0xFFFFFFFF, 4355),
-	BRCMF_FW_ENTRY(CY_CC_55560_CHIP_ID, 0xFFFFFFFF, 55560),
+	BRCMF_FW_ENTRY(CY_CC_55572_CHIP_ID, 0xFFFFFFFF, 55572),
 	BRCMF_FW_ENTRY(CY_CC_4373_CHIP_ID, 0xFFFFFFFF, 4373),
 };
 
@@ -105,7 +105,7 @@ static const struct brcmf_firmware_mapping brcmf_pcie_fwnames[] = {
 
 #define BRCMF_PCIE_BAR0_WRAPBASE_DMP_OFFSET	0x1000
 #define BRCMF_PCIE_BAR0_PCIE_ENUM_OFFSET	0x2000
-#define BRCMF_CYW55560_PCIE_BAR0_PCIE_ENUM_OFFSET	0x3000
+#define BRCMF_CYW55572_PCIE_BAR0_PCIE_ENUM_OFFSET	0x3000
 
 #define BRCMF_PCIE_ARMCR4REG_BANKIDX		0x40
 #define BRCMF_PCIE_ARMCR4REG_BANKPDA		0x4C
@@ -2083,7 +2083,7 @@ static int brcmf_pcie_download_fw_nvram(struct brcmf_pciedev_info *devinfo,
 			  devinfo->nvram_name);
 	}
 
-	if (devinfo->ci->chip == CY_CC_55560_CHIP_ID) {
+	if (devinfo->ci->chip == CY_CC_55572_CHIP_ID) {
 		/* Write the length token to the last word of RAM address */
 		brcmf_pcie_write_ram32(devinfo, devinfo->ci->ramsize - 4,
 				       cpu_to_le32(nvram_csm));
@@ -2293,8 +2293,8 @@ static int brcmf_pcie_buscore_blhs_attach(void *ctx, struct brcmf_blhs **blhs,
 		blhsh->write = brcmf_pcie_buscore_blhs_write;
 
 		/* Host indication for bootloarder to start the init */
-		if (devinfo->pdev->device == CY_PCIE_55560_DEVICE_ID)
-			pcie_enum = BRCMF_CYW55560_PCIE_BAR0_PCIE_ENUM_OFFSET;
+		if (devinfo->pdev->device == CY_PCIE_55572_DEVICE_ID)
+			pcie_enum = BRCMF_CYW55572_PCIE_BAR0_PCIE_ENUM_OFFSET;
 		else
 			pcie_enum = BRCMF_PCIE_BAR0_PCIE_ENUM_OFFSET;
 
@@ -2857,7 +2857,7 @@ static const struct pci_device_id brcmf_pcie_devid_table[] = {
 	BRCMF_PCIE_DEVICE(CY_PCIE_54591_DEVICE_ID),
 	BRCMF_PCIE_DEVICE(CY_PCIE_54590_DEVICE_ID),
 	BRCMF_PCIE_DEVICE(CY_PCIE_54594_DEVICE_ID),
-	BRCMF_PCIE_DEVICE_CY(CY_PCIE_55560_DEVICE_ID),
+	BRCMF_PCIE_DEVICE_CY(CY_PCIE_55572_DEVICE_ID),
 	BRCMF_PCIE_DEVICE(CY_PCIE_4373_RAW_DEVICE_ID),
 	BRCMF_PCIE_DEVICE(CY_PCIE_4373_DUAL_DEVICE_ID),
 	BRCMF_PCIE_DEVICE(CY_PCIE_4373_2G_DEVICE_ID),
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
index c302ef680cd0..9da21d3b1af3 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
@@ -70,9 +70,9 @@
 #define CY_89459_MES_WATERMARK	0x40
 #define CY_89459_MESBUSYCTRL	(CY_89459_MES_WATERMARK | \
 				 SBSDIO_MESBUSYCTRL_ENAB)
-#define CYW55560_F2_WATERMARK	0x40
-#define CYW55560_MES_WATERMARK	0x40
-#define CYW55560_F1_MESBUSYCTRL	(CYW55560_MES_WATERMARK | \
+#define CYW55572_F2_WATERMARK	0x40
+#define CYW55572_MES_WATERMARK	0x40
+#define CYW55572_F1_MESBUSYCTRL	(CYW55572_MES_WATERMARK | \
 				 SBSDIO_MESBUSYCTRL_ENAB)
 
 #ifdef DEBUG
@@ -649,7 +649,7 @@ CY_FW_DEF(4359, "cyfmac4359-sdio");
 CY_FW_DEF(4373, "cyfmac4373-sdio");
 CY_FW_DEF(43012, "cyfmac43012-sdio");
 CY_FW_DEF(89459, "cyfmac54591-sdio");
-CY_FW_TRXSE_DEF(55560, "cyfmac55560-sdio");
+CY_FW_TRXSE_DEF(55572, "cyfmac55572-sdio");
 
 static const struct brcmf_firmware_mapping brcmf_sdio_fwnames[] = {
 	BRCMF_FW_ENTRY(BRCM_CC_43143_CHIP_ID, 0xFFFFFFFF, 43143),
@@ -676,7 +676,7 @@ static const struct brcmf_firmware_mapping brcmf_sdio_fwnames[] = {
 	BRCMF_FW_ENTRY(CY_CC_4373_CHIP_ID, 0xFFFFFFFF, 4373),
 	BRCMF_FW_ENTRY(CY_CC_43012_CHIP_ID, 0xFFFFFFFF, 43012),
 	BRCMF_FW_ENTRY(CY_CC_89459_CHIP_ID, 0xFFFFFFFF, 89459),
-	BRCMF_FW_ENTRY(CY_CC_55560_CHIP_ID, 0xFFFFFFFF, 55560)
+	BRCMF_FW_ENTRY(CY_CC_55572_CHIP_ID, 0xFFFFFFFF, 55572)
 };
 
 #define TXCTL_CREDITS	2
@@ -738,7 +738,7 @@ brcmf_sdio_kso_control(struct brcmf_sdio *bus, bool on)
 	 * bit, to avoid polling of KSO bit.
 	 */
 	if (!on && ((bus->ci->chip == CY_CC_43012_CHIP_ID) ||
-		    (bus->ci->chip == CY_CC_55560_CHIP_ID)))
+		    (bus->ci->chip == CY_CC_55572_CHIP_ID)))
 		return err;
 
 	if (on) {
@@ -2541,7 +2541,7 @@ static bool brcmf_chip_is_ulp(struct brcmf_chip *ci)
 static bool brcmf_sdio_use_ht_avail(struct brcmf_chip *ci)
 {
 	if (ci->chip == CY_CC_4373_CHIP_ID ||
-	    ci->chip == CY_CC_55560_CHIP_ID)
+	    ci->chip == CY_CC_55572_CHIP_ID)
 		return true;
 	else
 		return false;
@@ -3734,7 +3734,7 @@ static bool brcmf_sdio_aos_no_decode(struct brcmf_sdio *bus)
 {
 	if (bus->ci->chip == CY_CC_43012_CHIP_ID ||
 	    bus->ci->chip == CY_CC_4373_CHIP_ID ||
-	    bus->ci->chip == CY_CC_55560_CHIP_ID ||
+	    bus->ci->chip == CY_CC_55572_CHIP_ID ||
 	    bus->ci->chip == BRCM_CC_4339_CHIP_ID ||
 	    bus->ci->chip == BRCM_CC_4345_CHIP_ID ||
 	    bus->ci->chip == BRCM_CC_4354_CHIP_ID ||
@@ -4711,18 +4711,18 @@ static void brcmf_sdio_firmware_callback(struct device *dev, int err,
 			brcmf_sdiod_writeb(sdiod, SBSDIO_FUNC1_MESBUSYCTRL,
 					   CY_89459_MESBUSYCTRL, &err);
 			break;
-		case SDIO_DEVICE_ID_CYPRESS_55560:
+		case SDIO_DEVICE_ID_CYPRESS_55572:
 			brcmf_dbg(INFO, "set F2 watermark to 0x%x*4 bytes\n",
-				  CYW55560_F2_WATERMARK);
+				  CYW55572_F2_WATERMARK);
 			brcmf_sdiod_writeb(sdiod, SBSDIO_WATERMARK,
-					   CYW55560_F2_WATERMARK, &err);
+					   CYW55572_F2_WATERMARK, &err);
 			devctl = brcmf_sdiod_readb(sdiod, SBSDIO_DEVICE_CTL,
 						   &err);
 			devctl |= SBSDIO_DEVCTL_F2WM_ENAB;
 			brcmf_sdiod_writeb(sdiod, SBSDIO_DEVICE_CTL, devctl,
 					   &err);
 			brcmf_sdiod_writeb(sdiod, SBSDIO_FUNC1_MESBUSYCTRL,
-					   CYW55560_F1_MESBUSYCTRL, &err);
+					   CYW55572_F1_MESBUSYCTRL, &err);
 			break;
 		default:
 			brcmf_sdiod_writeb(sdiod, SBSDIO_WATERMARK,
diff --git a/drivers/net/wireless/broadcom/brcm80211/include/brcm_hw_ids.h b/drivers/net/wireless/broadcom/brcm80211/include/brcm_hw_ids.h
index 91c6b38c6895..c6d9aad29c7b 100644
--- a/drivers/net/wireless/broadcom/brcm80211/include/brcm_hw_ids.h
+++ b/drivers/net/wireless/broadcom/brcm80211/include/brcm_hw_ids.h
@@ -55,7 +55,7 @@
 #define CY_CC_4373_CHIP_ID		0x4373
 #define CY_CC_43012_CHIP_ID		43012
 #define CY_CC_89459_CHIP_ID             0x4355
-#define CY_CC_55560_CHIP_ID		0xd908
+#define CY_CC_55572_CHIP_ID		0xd908
 
 /* USB Device IDs */
 #define BRCM_USB_43143_DEVICE_ID	0xbd1e
@@ -94,7 +94,7 @@
 #define CY_PCIE_54591_DEVICE_ID         0x4417
 #define CY_PCIE_54590_DEVICE_ID		0x4416
 #define CY_PCIE_54594_DEVICE_ID		0x441a
-#define CY_PCIE_55560_DEVICE_ID		0xbd31
+#define CY_PCIE_55572_DEVICE_ID		0xbd31
 #define CY_PCIE_4373_RAW_DEVICE_ID	0x4373
 #define CY_PCIE_4373_DUAL_DEVICE_ID	0x4418
 #define CY_PCIE_4373_2G_DEVICE_ID	0x4419
diff --git a/include/linux/mmc/sdio_ids.h b/include/linux/mmc/sdio_ids.h
index 30bc23db7fef..6afd50fef4da 100644
--- a/include/linux/mmc/sdio_ids.h
+++ b/include/linux/mmc/sdio_ids.h
@@ -82,7 +82,7 @@
 #define SDIO_DEVICE_ID_CYPRESS_54591		0xbd3b
 #define SDIO_DEVICE_ID_CYPRESS_54594		0xbd3c
 #define SDIO_DEVICE_ID_CYPRESS_43439		0xbd3d
-#define SDIO_DEVICE_ID_CYPRESS_55560		0xbd31
+#define SDIO_DEVICE_ID_CYPRESS_55572		0xbd31
 
 #define SDIO_VENDOR_ID_MARVELL			0x02df
 #define SDIO_DEVICE_ID_MARVELL_LIBERTAS		0x9103
-- 
2.17.1

